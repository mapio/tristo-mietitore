#!/bin/bash -e

echocol() { echo -e "\033[31m$@...\033[0m " >&2; }

if [ -z "$1" ]; then
    exec >/dev/null
fi

echocol "Setup dirs"

tempdir=$(mktemp -d /tmp/sf-XXXXXXXXX) || exit 1

mkdir -p "$tempdir/pip"
mkdir -p "$tempdir/dist"
rm -rf ./release
mkdir -p ./release

echocol "Vendorizing [begin]"

python3 -m pip install --ignore-installed --install-option="--prefix=$tempdir/pip" flask pytz Babel 2>&1

rm -rf "$tempdir"/pip/lib/python3*/site-packages/*.egg-info
cp -rv "$tempdir"/pip/lib/python3*/site-packages/* "$tempdir/dist"

echocol "Vendorizing [end]"

echocol "Copying source files to dist"

cp -rv ./src/{tm,__main__.py} "$tempdir/dist"

echocol "Removing stale complied files"

find "$tempdir/dist" -name __pycache__ -prune -exec rm -rf {} \;

echocol "Compiling language files"

mkdir $tempdir/dist/tm/mos
for po in ./src/pos/*.po; do
	bn=${po##*/}
	mo=$tempdir/dist/tm/mos/${bn%.po}.mo
	PYTHONPATH="$tempdir/pip/lib/python3.7/site-packages/" python3 -m babel.messages.frontend compile -f -i $po -o $mo 2>&1
done

echocol "Preparing zip file"

python3 -m zipapp -p '/usr/bin/env python3' "$tempdir/dist" -o ./release/tm

rm -rf "$tempdir"

echocol "Built version is"

./release/tm version
