#!/bin/bash -e

assert() {
	echo -ne "\033[31m$1...\033[0m "
	if [[ $2 == $3 ]]; then
		echo OK
	else
		echo -e "FAIL:"
		echo "Actual: [$2]"
		echo "Expected: [$3]"
		exit 1
	fi
}

# Prepare the configuration

export TM_SETTINGS=/tmp/tm_server/conf.py

rm -rf /tmp/tm_server
mkdir -p /tmp/tm_server/{tar_dir,untar_dir}
touch /tmp/tm_server/tar_dir/TEST

./release/tm mkconf -b ./test/conf.py -r ./test/uids.tsv -u /tmp/tm_server/uploads /tmp/tm_server/tar_dir $TM_SETTINGS

# Start the server (pre-kill all other python stuff: this is not safe!)

pkill -f release/tm 2>/dev/null || true
( ./release/tm web > /tmp/tm_server/outerr 2>&1 & )
port=8000

pg() { python3 -c "from urllib.request import urlopen; print(urlopen('http://localhost:$port/$1').read().decode('utf-8'))" | python3; }

echo -n "Waiting for server startup"
attempts=10
while [[ $attempts > 0 ]] && ! grep -q "Start" /tmp/tm_server/uploads/EVENTS-* 2>/dev/null; do
	echo -n .
	sleep 1
	attempts=$(( $attempts - 1 ))
done
if [[ $attempts > 0 ]]; then
	echo ". started!"
else
	echo " FAILED TO START!"
	cat /tmp/tm_server/outerr
	exit 1
fi

# Running tests...

assert "Successful sign (double quote, via bash)" "$(pg d | bash)" "*With \" double*"

assert "Successful idenfity (double quote)" "$(/tmp/tm_server/home/tmclient id)" 'd With " double quote'

assert "Successful sign (quote, match)" "$(pg a)" "*With ' quote*"

assert "Successful sign (full check)" "$(pg 1)" 'echo "Effettuata installazione in /tmp/tm_server/home per: Fròst"; echo "TESTCONF"; echo /tmp/tm_server/home'

rm -f /tmp/tm_server/home/TEST
/tmp/tm_server/home/tmclient dl
assert "Download" "$(ls -1 /tmp/tm_server/home/TEST 2>&1)" "/tmp/tm_server/home/TEST"

assert "Repeated sign" "$(pg 1)" 'echo "Matricola già in uso per lo studente: Fròst"'

assert "Not registered" "$(pg x)" "echo \"Matricola non registrata all'esame\""

assert "Upload" "$(/tmp/tm_server/home/tmclient ul ^TEST)" "TEST"

assert "Received upload" "$(tar -C /tmp/tm_server/untar_dir -xvf /tmp/tm_server/uploads/1/*.tar TEST 2>&1)" "TEST"

perl -i -pe 's/9iMjaoUxRbadTZaTY86tViJisVk/boo/' /tmp/tm_server/home/tmclient
assert "Client auth error" "$(/tmp/tm_server/home/tmclient ul ^TEST 2>&1)" "Si è verificato un errore inatteso del client!"

touch /tmp/tm_server/uploads/s
assert "Bootstrap failure" "$(pg s)" 'echo "Si è verificato un errore inatteso di avvio!"'

rm -rf /tmp/tm_server/home /tmp/tm_server/uploads/s
touch /tmp/tm_server/home
assert "Installation failure" "$(pg s 2>&1)" 'echo "Si è verificato un errore inatteso di installazione!"'

assert "Auth error" "$(curl -d signature=x -sL http://localhost:$port/)" '# Firma mancante, o invalida!'

assert "Internal error" "$(curl -d signature='s.rDlTBxI4T0wZ4XldsPQ0fscy2Pc' -d tar='ERROR' -sL http://localhost:$port/)" '# Si è verificato un errore inatteso del server!'

# Again, a very unsafe kill all!

pkill -f release/tm 2>/dev/null || true
